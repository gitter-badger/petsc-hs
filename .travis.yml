# Use new container infrastructure to enable caching
sudo: 
  false

# Choose a lightweight base image (C); we provide our own build tools.
language: 
  c
# language: haskell


# The different configurations we want to test. You could also do things like
# change flags or use --stack-yaml to point to a different file.

env:
  - ARGS=""
  - ARGS="--resolver lts-2"
  - ARGS="--resolver lts-3"
  - ARGS="--resolver lts"
  - ARGS="--resolver nightly"


# # Install GFortran via apt-get.
# # See http://docs.travis-ci.com/user/apt/ for more information
# addons:
#   apt:
#     packages:
#     - gfortran            # needed to build PETSc
#     - libgmp-dev          # needed by GMP




before_install:
  # environment variables : 
  - export PETSC_DIR="$PWD"/petsc
  - export PETSC_ARCH=arch-linux2-c-debug 

  - export PETSC_INCLUDE1="$PETSC_DIR"/include/
  - export PETSC_INCLUDE2="$PETSC_DIR"/"$PETSC_ARCH"/include/
  - export PETSC_LIB="$PETSC_DIR"/"$PETSC_ARCH"/lib/

  - export PETSC_VERSION=3.6.2
  - export PETSC_FTP=http://ftp.mcs.anl.gov/pub/petsc/release-snapshots
  - export PETSC_TAR=$PETSC_FTP/petsc-lite-$PETSC_VERSION.tar.gz

  # directories
  - mkdir -p ~/.local/bin
  - mkdir -p "$PETSC_DIR"
  - mkdir -p "$PETSC_DIR"/.local


  # PATH
  - export PATH=$HOME/.local/bin:$PATH


  # 
  - ls -ls
  - ls $PETSC_DIR
  - printenv



# # Download and install PETSc, MPICH, GFORTRAN, FBLASLAPACK
#   - travis_retry ./install-petsc.sh $PETSC_VERSION $PETSC_DIR $PETSC_ARCH



# # Download and unpack the stack executable
#   - travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C $HOME/.local/bin '*/stack'



# # This line does all of the work: installs GHC if necessary, build the library,
# # executables, and test suites, and runs the test suites. --no-terminal works
# # around some quirks in Travis's terminal implementation.

# script: 
#   - chmod +x stack-build.sh
#   - ./stack-build.sh $ARGS $PETSC_DIR $PETSC_ARCH
#   # stack $ARGS --no-terminal --install-ghc 
#   # stack $ARGS --no-terminal --install-ghc test --haddock
#   # stack build $ARGS --extra-include-dirs=$PETSC_INCLUDE1:$PETSC_INCLUDE2 --extra-lib-dirs=$PETSC_LIB




# cache:
#   directories:
#   - $HOME/.petsc
#   - $HOME/.stack


